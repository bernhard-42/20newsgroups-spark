{
  "paragraphs": [
    {
      "text": "%md\n\n## 1 Download Data and load into HDFS",
      "dateUpdated": "Feb 4, 2016 5:30:30 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453126719490_1787318550",
      "id": "20160118-141839_380242664",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e1 Download Data and load into HDFS\u003c/h2\u003e\n"
      },
      "dateCreated": "Jan 18, 2016 2:18:39 PM",
      "dateStarted": "Feb 4, 2016 5:30:25 PM",
      "dateFinished": "Feb 4, 2016 5:30:28 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\n\ncd /tmp\nmkdir 20newsgroups\ncd 20newsgroups\n\nwget http://qwone.com/~jason/20Newsgroups/20news-bydate.tar.gz\n\ntar -zxf 20news-bydate.tar.gz\n\nls  /tmp/20newsgroups/20news-bydate-train",
      "dateUpdated": "Jan 22, 2016 12:45:06 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453113231111_2012418337",
      "id": "20160118-103351_966794528",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "--2016-01-22 12:45:08--  http://qwone.com/~jason/20Newsgroups/20news-bydate.tar.gz\nResolving qwone.com (qwone.com)... 72.74.135.137\nConnecting to qwone.com (qwone.com)|72.74.135.137|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 14464277 (14M) [application/x-gzip]\nSaving to: ‘20news-bydate.tar.gz’\n\n     0K .......... .......... .......... .......... ..........  0%  247K 57s\n    50K .......... .......... .......... .......... ..........  0%  339K 49s\n   100K .......... .......... .......... .......... ..........  1%  459K 43s\n   150K .......... .......... .......... .......... ..........  1%  717K 37s\n   200K .......... .......... .......... .......... ..........  1%  773K 33s\n   250K .......... .......... .......... .......... ..........  2%  738K 30s\n   300K .......... .......... .......... .......... ..........  2%  818K 28s\n   350K .......... .......... .......... .......... ..........  2%  676K 27s\n   400K .......... .......... .......... .......... ..........  3%  759K 26s\n   450K .......... .......... .......... .......... ..........  3%  815K 25s\n   500K .......... .......... .......... .......... ..........  3% 1.05M 24s\n   550K .......... .......... .......... .......... ..........  4%  927K 23s\n   600K .......... .......... .......... .......... ..........  4% 1.02M 22s\n   650K .......... .......... .......... .......... ..........  4% 1.06M 21s\n   700K .......... .......... .......... .......... ..........  5% 1007K 21s\n   750K .......... .......... .......... .......... ..........  5% 1.13M 20s\n   800K .......... .......... .......... .......... ..........  6%  980K 20s\n   850K .......... .......... .......... .......... ..........  6% 1.30M 19s\n   900K .......... .......... .......... .......... ..........  6% 1.03M 19s\n   950K .......... .......... .......... .......... ..........  7% 1.23M 18s\n  1000K .......... .......... .......... .......... ..........  7% 1.35M 18s\n  1050K .......... .......... .......... .......... ..........  7% 1.05M 17s\n  1100K .......... .......... .......... .......... ..........  8% 1.58M 17s\n  1150K .......... .......... .......... .......... ..........  8% 1.04M 17s\n  1200K .......... .......... .......... .......... ..........  8% 1.52M 16s\n  1250K .......... .......... .......... .......... ..........  9% 1.22M 16s\n  1300K .......... .......... .......... .......... ..........  9% 1.32M 16s\n  1350K .......... .......... .......... .......... ..........  9% 1.56M 15s\n  1400K .......... .......... .......... .......... .......... 10% 1.21M 15s\n  1450K .......... .......... .......... .......... .......... 10% 1.60M 15s\n  1500K .......... .......... .......... .......... .......... 10% 1.47M 15s\n  1550K .......... .......... .......... .......... .......... 11% 1.31M 14s\n  1600K .......... .......... .......... .......... .......... 11% 1.70M 14s\n  1650K .......... .......... .......... .......... .......... 12% 1.44M 14s\n  1700K .......... .......... .......... .......... .......... 12% 1.51M 14s\n  1750K .......... .......... .......... .......... .......... 12% 1.86M 13s\n  1800K .......... .......... .......... .......... .......... 13% 1.52M 13s\n  1850K .......... .......... .......... .......... .......... 13% 1.63M 13s\n  1900K .......... .......... .......... .......... .......... 13% 1.89M 13s\n  1950K .......... .......... .......... .......... .......... 14% 1.54M 13s\n  2000K .......... .......... .......... .......... .......... 14% 1.67M 12s\n  2050K .......... .......... .......... .......... .......... 14% 1.95M 12s\n  2100K .......... .......... .......... .......... .......... 15% 1.92M 12s\n  2150K .......... .......... .......... .......... .......... 15% 1.56M 12s\n  2200K .......... .......... .......... .......... .......... 15% 2.07M 12s\n  2250K .......... .......... .......... .......... .......... 16% 1.89M 11s\n  2300K .......... .......... .......... .......... .......... 16% 1.63M 11s\n  2350K .......... .......... .......... .......... .......... 16% 2.21M 11s\n  2400K .......... .......... .......... .......... .......... 17% 2.22M 11s\n  2450K .......... .......... .......... .......... .......... 17% 1.72M 11s\n  2500K .......... .......... .......... .......... .......... 18% 1.86M 11s\n  2550K .......... .......... .......... .......... .......... 18% 2.36M 11s\n  2600K .......... .......... .......... .......... .......... 18% 1.98M 10s\n  2650K .......... .......... .......... .......... .......... 19% 1.92M 10s\n  2700K .......... .......... .......... .......... .......... 19% 2.18M 10s\n  2750K .......... .......... .......... .......... .......... 19% 2.52M 10s\n  2800K .......... .......... .......... .......... .......... 20% 2.06M 10s\n  2850K .......... .......... .......... .......... .......... 20% 1.83M 10s\n  2900K .......... .......... .......... .......... .......... 20% 2.40M 10s\n  2950K .......... .......... .......... .......... .......... 21% 2.65M 9s\n  3000K .......... .......... .......... .......... .......... 21% 2.14M 9s\n  3050K .......... .......... .......... .......... .......... 21% 2.05M 9s\n  3100K .......... .......... .......... .......... .......... 22% 2.25M 9s\n  3150K .......... .......... .......... .......... .......... 22% 2.72M 9s\n  3200K .......... .......... .......... .......... .......... 23% 2.26M 9s\n  3250K .......... .......... .......... .......... .......... 23% 2.13M 9s\n  3300K .......... .......... .......... .......... .......... 23% 2.33M 9s\n  3350K .......... .......... .......... .......... .......... 24% 2.78M 9s\n  3400K .......... .......... .......... .......... .......... 24% 2.50M 9s\n  3450K .......... .......... .......... .......... .......... 24% 2.45M 8s\n  3500K .......... .......... .......... .......... .......... 25% 2.29M 8s\n  3550K .......... .......... .......... .......... .......... 25% 2.61M 8s\n  3600K .......... .......... .......... .......... .......... 25% 3.01M 8s\n  3650K .......... .......... .......... .......... .......... 26% 2.49M 8s\n  3700K .......... .......... .......... .......... .......... 26% 2.62M 8s\n  3750K .......... .......... .......... .......... .......... 26% 2.28M 8s\n  3800K .......... .......... .......... .......... .......... 27% 2.88M 8s\n  3850K .......... .......... .......... .......... .......... 27% 3.16M 8s\n  3900K .......... .......... .......... .......... .......... 27% 2.66M 8s\n  3950K .......... .......... .......... .......... .......... 28% 2.45M 7s\n  4000K .......... .......... .......... .......... .......... 28% 2.60M 7s\n  4050K .......... .......... .......... .......... .......... 29% 3.01M 7s\n  4100K .......... .......... .......... .......... .......... 29% 3.16M 7s\n  4150K .......... .......... .......... .......... .......... 29% 2.78M 7s\n  4200K .......... .......... .......... .......... .......... 30% 2.60M 7s\n  4250K .......... .......... .......... .......... .......... 30% 2.82M 7s\n  4300K .......... .......... .......... .......... .......... 30% 2.89M 7s\n  4350K .......... .......... .......... .......... .......... 31% 3.11M 7s\n  4400K .......... .......... .......... .......... .......... 31% 3.18M 7s\n  4450K .......... .......... .......... .......... .......... 31% 3.15M 7s\n  4500K .......... .......... .......... .......... .......... 32% 2.55M 7s\n  4550K .......... .......... .......... .......... .......... 32% 3.08M 7s\n  4600K .......... .......... .......... .......... .......... 32% 3.10M 6s\n  4650K .......... .......... .......... .......... .......... 33% 3.16M 6s\n  4700K .......... .......... .......... .......... .......... 33% 3.16M 6s\n  4750K .......... .......... .......... .......... .......... 33% 3.18M 6s\n  4800K .......... .......... .......... .......... .......... 34% 2.88M 6s\n  4850K .......... .......... .......... .......... .......... 34% 3.21M 6s\n  4900K .......... .......... .......... .......... .......... 35% 3.18M 6s\n  4950K .......... .......... .......... .......... .......... 35% 3.16M 6s\n  5000K .......... .......... .......... .......... .......... 35% 3.09M 6s\n  5050K .......... .......... .......... .......... .......... 36% 3.17M 6s\n  5100K .......... .......... .......... .......... .......... 36% 3.16M 6s\n  5150K .......... .......... .......... .......... .......... 36% 3.18M 6s\n  5200K .......... .......... .......... .......... .......... 37% 3.08M 6s\n  5250K .......... .......... .......... .......... .......... 37% 3.17M 6s\n  5300K .......... .......... .......... .......... .......... 37% 3.17M 6s\n  5350K .......... .......... .......... .......... .......... 38% 3.14M 6s\n  5400K .......... .......... .......... .......... .......... 38% 3.16M 5s\n  5450K .......... .......... .......... .......... .......... 38% 3.11M 5s\n  5500K .......... .......... .......... .......... .......... 39% 3.18M 5s\n  5550K .......... .......... .......... .......... .......... 39% 3.14M 5s\n  5600K .......... .......... .......... .......... .......... 39% 3.18M 5s\n  5650K .......... .......... .......... .......... .......... 40% 3.08M 5s\n  5700K .......... .......... .......... .......... .......... 40% 3.17M 5s\n  5750K .......... .......... .......... .......... .......... 41% 3.14M 5s\n  5800K .......... .......... .......... .......... .......... 41% 3.22M 5s\n  5850K .......... .......... .......... .......... .......... 41% 3.08M 5s\n  5900K .......... .......... .......... .......... .......... 42% 3.16M 5s\n  5950K .......... .......... .......... .......... .......... 42% 3.17M 5s\n  6000K .......... .......... .......... .......... .......... 42% 3.08M 5s\n  6050K .......... .......... .......... .......... .......... 43% 3.18M 5s\n  6100K .......... .......... .......... .......... .......... 43% 3.13M 5s\n  6150K .......... .......... .......... .......... .......... 43% 3.20M 5s\n  6200K .......... .......... .......... .......... .......... 44% 3.17M 5s\n  6250K .......... .......... .......... .......... .......... 44% 3.05M 5s\n  6300K .......... .......... .......... .......... .......... 44% 3.19M 5s\n  6350K .......... .......... .......... .......... .......... 45% 3.16M 4s\n  6400K .......... .......... .......... .......... .......... 45% 3.16M 4s\n  6450K .......... .......... .......... .......... .......... 46% 3.18M 4s\n  6500K .......... .......... .......... .......... .......... 46% 3.07M 4s\n  6550K .......... .......... .......... .......... .......... 46% 3.16M 4s\n  6600K .......... .......... .......... .......... .......... 47% 3.18M 4s\n  6650K .......... .......... .......... .......... .......... 47% 3.18M 4s\n  6700K .......... .......... .......... .......... .......... 47% 3.06M 4s\n  6750K .......... .......... .......... .......... .......... 48% 3.17M 4s\n  6800K .......... .......... .......... .......... .......... 48% 3.19M 4s\n  6850K .......... .......... .......... .......... .......... 48% 3.17M 4s\n  6900K .......... .......... .......... .......... .......... 49% 3.06M 4s\n  6950K .......... .......... .......... .......... .......... 49% 3.20M 4s\n  7000K .......... .......... .......... .......... .......... 49% 3.15M 4s\n  7050K .......... .......... .......... .......... .......... 50% 3.18M 4s\n  7100K .......... .......... .......... .......... .......... 50% 3.08M 4s\n  7150K .......... .......... .......... .......... .......... 50% 3.16M 4s\n  7200K .......... .......... .......... .......... .......... 51% 3.17M 4s\n  7250K .......... .......... .......... .......... .......... 51% 3.17M 4s\n  7300K .......... .......... .......... .......... .......... 52% 3.19M 4s\n  7350K .......... .......... .......... .......... .......... 52% 3.08M 4s\n  7400K .......... .......... .......... .......... .......... 52% 3.18M 4s\n  7450K .......... .......... .......... .......... .......... 53% 3.13M 4s\n  7500K .......... .......... .......... .......... .......... 53% 3.19M 4s\n  7550K .......... .......... .......... .......... .......... 53% 3.08M 4s\n  7600K .......... .......... .......... .......... .......... 54% 3.18M 3s\n  7650K .......... .......... .......... .......... .......... 54% 3.18M 3s\n  7700K .......... .......... .......... .......... .......... 54% 3.16M 3s\n  7750K .......... .......... .......... .......... .......... 55% 2.16M 3s\n  7800K .......... .......... .......... .......... .......... 55% 4.93M 3s\n  7850K .......... .......... .......... .......... .......... 55% 3.04M 3s\n  7900K .......... .......... .......... .......... .......... 56% 3.49M 3s\n  7950K .......... .......... .......... .......... .......... 56% 3.17M 3s\n  8000K .......... .......... .......... .......... .......... 56% 3.17M 3s\n  8050K .......... .......... .......... .......... .......... 57% 3.19M 3s\n  8100K .......... .......... .......... .......... .......... 57% 3.15M 3s\n  8150K .......... .......... .......... .......... .......... 58% 3.15M 3s\n  8200K .......... .......... .......... .......... .......... 58% 3.08M 3s\n  8250K .......... .......... .......... .......... .......... 58% 3.17M 3s\n  8300K .......... .......... .......... .......... .......... 59% 3.18M 3s\n  8350K .......... .......... .......... .......... .......... 59% 3.18M 3s\n  8400K .......... .......... .......... .......... .......... 59% 3.08M 3s\n  8450K .......... .......... .......... .......... .......... 60% 3.17M 3s\n  8500K .......... .......... .......... .......... .......... 60% 3.17M 3s\n  8550K .......... .......... .......... .......... .......... 60% 3.14M 3s\n  8600K .......... .......... .......... .......... .......... 61% 3.08M 3s\n  8650K .......... .......... .......... .......... .......... 61% 3.17M 3s\n  8700K .......... .......... .......... .......... .......... 61% 3.16M 3s\n  8750K .......... .......... .......... .......... .......... 62% 3.18M 3s\n  8800K .......... .......... .......... .......... .......... 62% 3.08M 3s\n  8850K .......... .......... .......... .......... .......... 63% 3.17M 3s\n  8900K .......... .......... .......... .......... .......... 63% 3.18M 3s\n  8950K .......... .......... .......... .......... .......... 63% 3.15M 3s\n  9000K .......... .......... .......... .......... .......... 64% 3.08M 3s\n  9050K .......... .......... .......... .......... .......... 64% 3.20M 3s\n  9100K .......... .......... .......... .......... .......... 64% 3.15M 2s\n  9150K .......... .......... .......... .......... .......... 65% 3.18M 2s\n  9200K .......... .......... .......... .......... .......... 65% 3.13M 2s\n  9250K .......... .......... .......... .......... .......... 65% 3.10M 2s\n  9300K .......... .......... .......... .......... .......... 66% 3.18M 2s\n  9350K .......... .......... .......... .......... .......... 66% 3.16M 2s\n  9400K .......... .......... .......... .......... .......... 66% 3.19M 2s\n  9450K .......... .......... .......... .......... .......... 67% 3.08M 2s\n  9500K .......... .......... .......... .......... .......... 67% 3.17M 2s\n  9550K .......... .......... .......... .......... .......... 67% 3.16M 2s\n  9600K .......... .......... .......... .......... .......... 68% 3.15M 2s\n  9650K .......... .......... .......... .......... .......... 68% 3.07M 2s\n  9700K .......... .......... .......... .......... .......... 69% 3.19M 2s\n  9750K .......... .......... .......... .......... .......... 69% 3.18M 2s\n  9800K .......... .......... .......... .......... .......... 69% 3.17M 2s\n  9850K .......... .......... .......... .......... .......... 70% 3.09M 2s\n  9900K .......... .......... .......... .......... .......... 70% 3.15M 2s\n  9950K .......... .......... .......... .......... .......... 70% 3.19M 2s\n 10000K .......... .......... .......... .......... .......... 71% 3.17M 2s\n 10050K .......... .......... .......... .......... .......... 71% 3.16M 2s\n 10100K .......... .......... .......... .......... .......... 71% 3.09M 2s\n 10150K .......... .......... .......... .......... .......... 72% 3.18M 2s\n 10200K .......... .......... .......... .......... .......... 72% 3.15M 2s\n 10250K .......... .......... .......... .......... .......... 72% 3.16M 2s\n 10300K .......... .......... .......... .......... .......... 73% 3.09M 2s\n 10350K .......... .......... .......... .......... .......... 73% 3.19M 2s\n 10400K .......... .......... .......... .......... .......... 73% 3.17M 2s\n 10450K .......... .......... .......... .......... .......... 74% 3.16M 2s\n 10500K .......... .......... .......... .......... .......... 74% 3.10M 2s\n 10550K .......... .......... .......... .......... .......... 75% 3.10M 2s\n 10600K .......... .......... .......... .......... .......... 75% 3.24M 2s\n 10650K .......... .......... .......... .......... .......... 75% 3.17M 2s\n 10700K .......... .......... .......... .......... .......... 76% 3.07M 2s\n 10750K .......... .......... .......... .......... .......... 76% 3.16M 2s\n 10800K .......... .......... .......... .......... .......... 76% 3.16M 2s\n 10850K .......... .......... .......... .......... .......... 77% 3.17M 2s\n 10900K .......... .......... .......... .......... .......... 77% 3.16M 1s\n 10950K .......... .......... .......... .......... .......... 77% 3.09M 1s\n 11000K .......... .......... .......... .......... .......... 78% 3.14M 1s\n 11050K .......... .......... .......... .......... .......... 78% 3.19M 1s\n 11100K .......... .......... .......... .......... .......... 78% 3.18M 1s\n 11150K .......... .......... .......... .......... .......... 79% 3.10M 1s\n 11200K .......... .......... .......... .......... .......... 79% 3.16M 1s\n 11250K .......... .......... .......... .......... .......... 79% 3.17M 1s\n 11300K .......... .......... .......... .......... .......... 80% 3.17M 1s\n 11350K .......... .......... .......... .......... .......... 80% 2.92M 1s\n 11400K .......... .......... .......... .......... .......... 81% 3.36M 1s\n 11450K .......... .......... .......... .......... .......... 81% 3.17M 1s\n 11500K .......... .......... .......... .......... .......... 81% 3.16M 1s\n 11550K .......... .......... .......... .......... .......... 82% 3.11M 1s\n 11600K .......... .......... .......... .......... .......... 82% 3.14M 1s\n 11650K .......... .......... .......... .......... .......... 82% 3.15M 1s\n 11700K .......... .......... .......... .......... .......... 83% 3.18M 1s\n 11750K .......... .......... .......... .......... .......... 83% 3.09M 1s\n 11800K .......... .......... .......... .......... .......... 83% 3.17M 1s\n 11850K .......... .......... .......... .......... .......... 84% 3.15M 1s\n 11900K .......... .......... .......... .......... .......... 84% 3.19M 1s\n 11950K .......... .......... .......... .......... .......... 84% 3.16M 1s\n 12000K .......... .......... .......... .......... .......... 85% 3.10M 1s\n 12050K .......... .......... .......... .......... .......... 85%  251K 1s\n 12100K .......... .......... .......... .......... .......... 86% 3.97M 1s\n 12150K .......... .......... .......... .......... .......... 86% 5.60M 1s\n 12200K .......... .......... .......... .......... .......... 86% 4.66M 1s\n 12250K .......... .......... .......... .......... .......... 87% 3.46M 1s\n 12300K .......... .......... .......... .......... .......... 87% 9.71M 1s\n 12350K .......... .......... .......... .......... .......... 87% 3.47M 1s\n 12400K .......... .......... .......... .......... .......... 88% 4.00M 1s\n 12450K .......... .......... .......... .......... .......... 88% 6.97M 1s\n 12500K .......... .......... .......... .......... .......... 88% 6.82M 1s\n 12550K .......... .......... .......... .......... .......... 89% 56.0M 1s\n 12600K .......... .......... .......... .......... .......... 89% 70.5M 1s\n 12650K .......... .......... .......... .......... .......... 89% 53.0M 1s\n 12700K .......... .......... .......... .......... .......... 90% 75.4M 1s\n 12750K .......... .......... .......... .......... .......... 90%  138M 1s\n 12800K .......... .......... .......... .......... .......... 90%  150M 1s\n 12850K .......... .......... .......... .......... .......... 91%  182M 1s\n 12900K .......... .......... .......... .......... .......... 91%  168M 1s\n 12950K .......... .......... .......... .......... .......... 92% 1.11M 1s\n 13000K .......... .......... .......... .......... .......... 92% 3.18M 0s\n 13050K .......... .......... .......... .......... .......... 92% 3.09M 0s\n 13100K .......... .......... .......... .......... .......... 93% 3.15M 0s\n 13150K .......... .......... .......... .......... .......... 93% 3.19M 0s\n 13200K .......... .......... .......... .......... .......... 93% 3.16M 0s\n 13250K .......... .......... .......... .......... .......... 94% 3.09M 0s\n 13300K .......... .......... .......... .......... .......... 94% 3.17M 0s\n 13350K .......... .......... .......... .......... .......... 94% 3.17M 0s\n 13400K .......... .......... .......... .......... .......... 95% 3.17M 0s\n 13450K .......... .......... .......... .......... .......... 95% 3.08M 0s\n 13500K .......... .......... .......... .......... .......... 95% 3.13M 0s\n 13550K .......... .......... .......... .......... .......... 96% 3.21M 0s\n 13600K .......... .......... .......... .......... .......... 96% 3.17M 0s\n 13650K .......... .......... .......... .......... .......... 96% 3.14M 0s\n 13700K .......... .......... .......... .......... .......... 97% 3.10M 0s\n 13750K .......... .......... .......... .......... .......... 97% 3.17M 0s\n 13800K .......... .......... .......... .......... .......... 98% 3.17M 0s\n 13850K .......... .......... .......... .......... .......... 98% 3.17M 0s\n 13900K .......... .......... .......... .......... .......... 98% 3.09M 0s\n 13950K .......... .......... .......... .......... .......... 99% 3.16M 0s\n 14000K .......... .......... .......... .......... .......... 99% 3.17M 0s\n 14050K .......... .......... .......... .......... .......... 99% 3.16M 0s\n 14100K .......... .......... .....                           100% 3.15M\u003d6.2s\n\n2016-01-22 12:45:14 (2.24 MB/s) - ‘20news-bydate.tar.gz’ saved [14464277/14464277]\n\nalt.atheism\ncomp.graphics\ncomp.os.ms-windows.misc\ncomp.sys.ibm.pc.hardware\ncomp.sys.mac.hardware\ncomp.windows.x\nmisc.forsale\nrec.autos\nrec.motorcycles\nrec.sport.baseball\nrec.sport.hockey\nsci.crypt\nsci.electronics\nsci.med\nsci.space\nsoc.religion.christian\ntalk.politics.guns\ntalk.politics.mideast\ntalk.politics.misc\ntalk.religion.misc\n"
      },
      "dateCreated": "Jan 18, 2016 10:33:51 AM",
      "dateStarted": "Jan 22, 2016 12:45:06 PM",
      "dateFinished": "Jan 22, 2016 12:45:17 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\n\nhdfs dfs -put /tmp/20newsgroups \n\nhdfs dfs -ls /user/zeppelin/20newsgroups/20news-bydate-train",
      "dateUpdated": "Feb 4, 2016 5:31:24 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/sh"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453113586697_-388311343",
      "id": "20160118-103946_172980244",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "Found 20 items\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:22 /user/zeppelin/20newsgroups/20news-bydate-train/alt.atheism\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:22 /user/zeppelin/20newsgroups/20news-bydate-train/comp.graphics\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:22 /user/zeppelin/20newsgroups/20news-bydate-train/comp.os.ms-windows.misc\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:22 /user/zeppelin/20newsgroups/20news-bydate-train/comp.sys.ibm.pc.hardware\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:23 /user/zeppelin/20newsgroups/20news-bydate-train/comp.sys.mac.hardware\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:23 /user/zeppelin/20newsgroups/20news-bydate-train/comp.windows.x\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:23 /user/zeppelin/20newsgroups/20news-bydate-train/misc.forsale\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:24 /user/zeppelin/20newsgroups/20news-bydate-train/rec.autos\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:24 /user/zeppelin/20newsgroups/20news-bydate-train/rec.motorcycles\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:24 /user/zeppelin/20newsgroups/20news-bydate-train/rec.sport.baseball\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:24 /user/zeppelin/20newsgroups/20news-bydate-train/rec.sport.hockey\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:25 /user/zeppelin/20newsgroups/20news-bydate-train/sci.crypt\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:25 /user/zeppelin/20newsgroups/20news-bydate-train/sci.electronics\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:25 /user/zeppelin/20newsgroups/20news-bydate-train/sci.med\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:26 /user/zeppelin/20newsgroups/20news-bydate-train/sci.space\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:26 /user/zeppelin/20newsgroups/20news-bydate-train/soc.religion.christian\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:26 /user/zeppelin/20newsgroups/20news-bydate-train/talk.politics.guns\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:26 /user/zeppelin/20newsgroups/20news-bydate-train/talk.politics.mideast\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:27 /user/zeppelin/20newsgroups/20news-bydate-train/talk.politics.misc\ndrwxr-xr-x   - zeppelin hdfs          0 2016-01-27 20:27 /user/zeppelin/20newsgroups/20news-bydate-train/talk.religion.misc\n"
      },
      "dateCreated": "Jan 18, 2016 10:39:46 AM",
      "dateStarted": "Feb 4, 2016 5:30:41 PM",
      "dateFinished": "Feb 4, 2016 5:30:57 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## 2 Multinomial Logistic Regression with MLLib (Scala)",
      "dateUpdated": "Feb 4, 2016 5:31:03 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453209900640_-1736788199",
      "id": "20160119-132500_2047965067",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e2 Multinomial Logistic Regression with MLLib (Scala)\u003c/h2\u003e\n"
      },
      "dateCreated": "Jan 19, 2016 1:25:00 PM",
      "dateStarted": "Feb 4, 2016 5:31:03 PM",
      "dateFinished": "Feb 4, 2016 5:31:03 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 2.1 Prepare Training and Test Data ",
      "dateUpdated": "Feb 4, 2016 5:31:06 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453371116148_1748455726",
      "id": "20160121-101156_393058485",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e2.1 Prepare Training and Test Data\u003c/h3\u003e\n"
      },
      "dateCreated": "Jan 21, 2016 10:11:56 AM",
      "dateStarted": "Feb 4, 2016 5:31:06 PM",
      "dateFinished": "Feb 4, 2016 5:31:06 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.rdd.RDD\nimport org.apache.spark.mllib.feature.{HashingTF, IDF}\nimport scala.collection.immutable.HashMap\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport scala.math.pow\n\nval categories \u003d Array(\"alt.atheism\", \"soc.religion.christian\", \"comp.graphics\", \"sci.med\")\nval categoryMap \u003d categories.zipWithIndex.toMap\n\nval numFeatures \u003d pow(2,18).toInt  // default is 2**20, so reduce on smaller machines \n\ndef tokenize(line: String): Array[String] \u003d {\n    line.split(\"\"\"\\W+\"\"\").map(_.toLowerCase)\n}\n\ndef prepareData(typ: String) \u003d {\n    categories.map(category \u003d\u003e {\n        val wordsData \u003d sc.wholeTextFiles(\"/user/zeppelin/20newsgroups/20news-bydate-\" + typ + \"/\" + category)\n                          .map(message \u003d\u003e tokenize(message._2).toSeq)\n\n        val hashingTF \u003d new HashingTF(pow(2,18).toInt)\n        val featuredData \u003d hashingTF.transform(wordsData).cache()\n\n        val idf \u003d new IDF().fit(featuredData)\n        val tfidf \u003d idf.transform(featuredData)\n        tfidf.map(row \u003d\u003e LabeledPoint(categoryMap(category),row))\n    }).reduce(_ union _)\n}\n\nval twenty_train \u003d prepareData(\"train\").cache()\nval twenty_test  \u003d prepareData(\"test\").cache()\n",
      "dateUpdated": "Feb 4, 2016 5:31:28 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453245065990_498026278",
      "id": "20160119-231105_1705330742",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.rdd.RDD\nimport org.apache.spark.mllib.feature.{HashingTF, IDF}\nimport scala.collection.immutable.HashMap\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport scala.math.pow\ncategories: Array[String] \u003d Array(alt.atheism, soc.religion.christian, comp.graphics, sci.med)\ncategoryMap: scala.collection.immutable.Map[String,Int] \u003d Map(alt.atheism -\u003e 0, soc.religion.christian -\u003e 1, comp.graphics -\u003e 2, sci.med -\u003e 3)\nnumFeatures: Int \u003d 262144\ntokenize: (line: String)Array[String]\nprepareData: (typ: String)org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint]\ntwenty_train: org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint] \u003d UnionRDD[26] at union at \u003cconsole\u003e:46\ntwenty_test: org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint] \u003d UnionRDD[53] at union at \u003cconsole\u003e:46\n"
      },
      "dateCreated": "Jan 19, 2016 11:11:05 PM",
      "dateStarted": "Feb 4, 2016 5:31:28 PM",
      "dateFinished": "Feb 4, 2016 5:35:00 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 2.2 Create Model",
      "dateUpdated": "Feb 4, 2016 5:35:07 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453371165695_-803370834",
      "id": "20160121-101245_762948657",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e2.2 Create Model\u003c/h3\u003e\n"
      },
      "dateCreated": "Jan 21, 2016 10:12:45 AM",
      "dateStarted": "Feb 4, 2016 5:35:07 PM",
      "dateFinished": "Feb 4, 2016 5:35:07 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.mllib.classification.LogisticRegressionWithLBFGS\n\nval model \u003d new LogisticRegressionWithLBFGS().setNumClasses(4).run(twenty_train)\n",
      "dateUpdated": "Feb 4, 2016 5:35:09 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453289497685_-120467028",
      "id": "20160120-113137_1630362623",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.mllib.classification.LogisticRegressionWithLBFGS\nmodel: org.apache.spark.mllib.classification.LogisticRegressionModel \u003d org.apache.spark.mllib.classification.LogisticRegressionModel: intercept \u003d 0.0, numFeatures \u003d 786432, numClasses \u003d 4, threshold \u003d 0.5\n"
      },
      "dateCreated": "Jan 20, 2016 11:31:37 AM",
      "dateStarted": "Feb 4, 2016 5:35:09 PM",
      "dateFinished": "Feb 4, 2016 5:37:12 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 2.3 Validate Model",
      "dateUpdated": "Feb 4, 2016 5:35:50 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453371247059_1141858308",
      "id": "20160121-101407_243229310",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e2.3 Validate Model\u003c/h3\u003e\n"
      },
      "dateCreated": "Jan 21, 2016 10:14:07 AM",
      "dateStarted": "Feb 4, 2016 5:35:51 PM",
      "dateFinished": "Feb 4, 2016 5:35:51 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.rdd.RDD\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\n\ndef validate(predictionsAndLabels: RDD[(Double, Double)], labels: Array[String]) \u003d {\n    val metrics \u003d new MulticlassMetrics(predictionsAndLabels)\n\n    println(\"\")\n    println(\"CONFUSION MATRIX\")\n    println(metrics.confusionMatrix)\n    println(\"\")\n    println(\"CATEGORY                 PRECISION  RECALL\")\n    \n    for (i \u003c- 0 to labels.size-1) {\n        val l \u003d labels(i)\n        val p \u003d metrics.precision(i)\n        val r \u003d metrics.recall(i)\n        println(f\"$l%22s:  $p%2.3f      $r%2.3f\")\n    }\n    println(\"\")\n}\n",
      "dateUpdated": "Feb 4, 2016 5:37:21 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453381656913_-1053778748",
      "id": "20160121-130736_1443718490",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.rdd.RDD\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\nvalidate: (predictionsAndLabels: org.apache.spark.rdd.RDD[(Double, Double)], labels: Array[String])Unit\n"
      },
      "dateCreated": "Jan 21, 2016 1:07:36 PM",
      "dateStarted": "Feb 4, 2016 5:37:21 PM",
      "dateFinished": "Feb 4, 2016 5:37:25 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\nval predictionsAndLabels \u003d twenty_test.map { case LabeledPoint(label, features) \u003d\u003e\n  val prediction \u003d model.predict(features)\n  (prediction, label)\n}\n\nvalidate(predictionsAndLabels, categories)\nval metrics \u003d new MulticlassMetrics(predictionsAndLabels)\nval precision \u003d metrics.precision\n",
      "dateUpdated": "Feb 4, 2016 5:37:32 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453305516805_1404658622",
      "id": "20160120-155836_1681050156",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "predictionsAndLabels: org.apache.spark.rdd.RDD[(Double, Double)] \u003d MapPartitionsRDD[150] at map at \u003cconsole\u003e:47\n\nCONFUSION MATRIX\n282.0  19.0   10.0   8.0    \n10.0   381.0  5.0    2.0    \n10.0   8.0    363.0  8.0    \n11.0   17.0   44.0   324.0  \n\nCATEGORY                 PRECISION  RECALL\n           alt.atheism:  0,901      0,884\nsoc.religion.christian:  0,896      0,957\n         comp.graphics:  0,860      0,933\n               sci.med:  0,947      0,818\n\nmetrics: org.apache.spark.mllib.evaluation.MulticlassMetrics \u003d org.apache.spark.mllib.evaluation.MulticlassMetrics@45aa68e6\nprecision: Double \u003d 0.8988015978695073\n"
      },
      "dateCreated": "Jan 20, 2016 3:58:36 PM",
      "dateStarted": "Feb 4, 2016 5:37:32 PM",
      "dateFinished": "Feb 4, 2016 5:37:46 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## 3 Naive Bayes Classification with Spark ML Pipeline (Scala)",
      "dateUpdated": "Feb 4, 2016 5:35:57 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453125220983_-2004907816",
      "id": "20160118-135340_1948903363",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e3 Naive Bayes Classification with Spark ML Pipeline (Scala)\u003c/h2\u003e\n"
      },
      "dateCreated": "Jan 18, 2016 1:53:40 PM",
      "dateStarted": "Feb 4, 2016 5:35:57 PM",
      "dateFinished": "Feb 4, 2016 5:35:58 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 3.1 Prepare Training and Test Data",
      "dateUpdated": "Feb 4, 2016 5:35:59 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453126755229_795112433",
      "id": "20160118-141915_1709685289",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e3.1 Prepare Training and Test Data\u003c/h3\u003e\n"
      },
      "dateCreated": "Jan 18, 2016 2:19:15 PM",
      "dateStarted": "Feb 4, 2016 5:36:00 PM",
      "dateFinished": "Feb 4, 2016 5:36:00 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val categories \u003d Array(\"alt.atheism\", \"soc.religion.christian\", \"comp.graphics\", \"sci.med\")\n\ndef prepareDF(typ: String) \u003d {\n    val rdds \u003d categories.map(category \u003d\u003e sc.wholeTextFiles(\"/user/zeppelin/20newsgroups/20news-bydate-\" + typ + \"/\" + category)\n                                            .map(msg \u003d\u003e (category, msg._2)))\n    sc.union(rdds).toDF(\"category\", \"message\")\n}\n\nval twenty_train_df \u003d prepareDF(\"train\").cache()\nval twenty_test_df  \u003d prepareDF(\"test\").cache()\n",
      "dateUpdated": "Feb 4, 2016 5:37:55 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453113834078_511183969",
      "id": "20160118-104354_1117051014",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "categories: Array[String] \u003d Array(alt.atheism, soc.religion.christian, comp.graphics, sci.med)\nprepareDF: (typ: String)org.apache.spark.sql.DataFrame\ntwenty_train_df: org.apache.spark.sql.DataFrame \u003d [category: string, message: string]\ntwenty_test_df: org.apache.spark.sql.DataFrame \u003d [category: string, message: string]\n"
      },
      "dateCreated": "Jan 18, 2016 10:43:54 AM",
      "dateStarted": "Feb 4, 2016 5:37:55 PM",
      "dateFinished": "Feb 4, 2016 5:38:07 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### 3.2 Create Pipeline and Model\n\n`Note: As of Spark 1.6.0, Naive Bayes for Spark ML is still \"experimental\"`\n\n",
      "dateUpdated": "Feb 4, 2016 5:38:12 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453138830027_1976712861",
      "id": "20160118-174030_36733032",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e3.2 Create Pipeline and Model\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eNote: As of Spark 1.6.0, Naive Bayes for Spark ML is still \"experimental\"\u003c/code\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Jan 18, 2016 5:40:30 PM",
      "dateStarted": "Feb 4, 2016 5:38:12 PM",
      "dateFinished": "Feb 4, 2016 5:38:12 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.ml.feature.{HashingTF, IDF, Tokenizer, StringIndexer, IndexToString}\nimport org.apache.spark.ml.classification.NaiveBayes\nimport org.apache.spark.ml.Pipeline\n\nval indexer   \u003d new StringIndexer().setInputCol(\"category\").setOutputCol(\"label\").fit(twenty_train_df)\n\nval tokenizer \u003d new Tokenizer().setInputCol(\"message\").setOutputCol(\"words\")\nval hashingTF \u003d new HashingTF().setInputCol(\"words\").setOutputCol(\"rawFeatures\")\nval idf       \u003d new IDF().setInputCol(\"rawFeatures\").setOutputCol(\"features\")\n\nval nb        \u003d new NaiveBayes().setFeaturesCol(\"features\").setLabelCol(\"label\").setSmoothing(1.0).setModelType(\"multinomial\") // implicit name of outputCol: \"prediction\"\n\nval converter \u003d new IndexToString().setInputCol(\"prediction\").setOutputCol(\"predictedCategory\").setLabels(indexer.labels)   // optional\n\n\nval pipeline \u003d new Pipeline().setStages(Array(indexer, tokenizer, hashingTF, idf, nb, converter))\n\nval model \u003d pipeline.fit(twenty_train_df)\n",
      "dateUpdated": "Feb 4, 2016 5:38:15 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453126695800_-665317771",
      "id": "20160118-141815_1569429724",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.ml.feature.{HashingTF, IDF, Tokenizer, StringIndexer, IndexToString}\nimport org.apache.spark.ml.classification.NaiveBayes\nimport org.apache.spark.ml.Pipeline\nindexer: org.apache.spark.ml.feature.StringIndexerModel \u003d strIdx_50458e81c321\ntokenizer: org.apache.spark.ml.feature.Tokenizer \u003d tok_fc5a725fd865\nhashingTF: org.apache.spark.ml.feature.HashingTF \u003d hashingTF_e351bbd15a38\nidf: org.apache.spark.ml.feature.IDF \u003d idf_d9ccc5d45867\nnb: org.apache.spark.ml.classification.NaiveBayes \u003d nb_187750d57526\nconverter: org.apache.spark.ml.feature.IndexToString \u003d idxToStr_76ae869bc639\npipeline: org.apache.spark.ml.Pipeline \u003d pipeline_29d15659d0d3\nmodel: org.apache.spark.ml.PipelineModel \u003d pipeline_29d15659d0d3\n"
      },
      "dateCreated": "Jan 18, 2016 2:18:15 PM",
      "dateStarted": "Feb 4, 2016 5:38:15 PM",
      "dateFinished": "Feb 4, 2016 5:39:16 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### 3.3 Validation",
      "dateUpdated": "Feb 4, 2016 5:39:20 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453138808335_-1084780110",
      "id": "20160118-174008_58504611",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e3.3 Validation\u003c/h3\u003e\n"
      },
      "dateCreated": "Jan 18, 2016 5:40:08 PM",
      "dateStarted": "Feb 4, 2016 5:39:20 PM",
      "dateFinished": "Feb 4, 2016 5:39:20 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.sql.Row\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\n\nval validation \u003d model.transform(twenty_test_df)\n\nval predictions \u003d validation.select(\"label\", \"prediction\")\nval predictionsAndLabels \u003d predictions.map {case Row(p: Double, l: Double) \u003d\u003e (p, l)}\n\nvalidate(predictionsAndLabels, indexer.labels)\n",
      "dateUpdated": "Feb 4, 2016 5:39:24 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453382278418_-911335167",
      "id": "20160121-131758_83240890",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.sql.Row\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\nvalidation: org.apache.spark.sql.DataFrame \u003d [category: string, message: string, label: double, words: array\u003cstring\u003e, rawFeatures: vector, features: vector, rawPrediction: vector, probability: vector, prediction: double, predictedCategory: string]\npredictions: org.apache.spark.sql.DataFrame \u003d [label: double, prediction: double]\npredictionsAndLabels: org.apache.spark.rdd.RDD[(Double, Double)] \u003d MapPartitionsRDD[215] at map at \u003cconsole\u003e:66\n\nCONFUSION MATRIX\n385.0  16.0   6.0    29.0   \n5.0    350.0  9.0    4.0    \n3.0    15.0   368.0  1.0    \n5.0    15.0   6.0    285.0  \n\nCATEGORY                 PRECISION  RECALL\nsoc.religion.christian:  0,967      0,883\n               sci.med:  0,884      0,951\n         comp.graphics:  0,946      0,951\n           alt.atheism:  0,893      0,916\n\n"
      },
      "dateCreated": "Jan 21, 2016 1:17:58 PM",
      "dateStarted": "Feb 4, 2016 5:39:24 PM",
      "dateFinished": "Feb 4, 2016 5:40:02 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n## 4 Naive Bayes Classification with Spark ML Pipeline (Python)",
      "dateUpdated": "Feb 4, 2016 5:39:30 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453383191034_-253092216",
      "id": "20160121-133311_661809446",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e4 Naive Bayes Classification with Spark ML Pipeline (Python)\u003c/h2\u003e\n"
      },
      "dateCreated": "Jan 21, 2016 1:33:11 PM",
      "dateStarted": "Feb 4, 2016 5:39:30 PM",
      "dateFinished": "Feb 4, 2016 5:39:30 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 4.1 Prepare Training and Test Data",
      "dateUpdated": "Feb 4, 2016 5:39:32 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453385273734_-1142089870",
      "id": "20160121-140753_1667930935",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e4.1 Prepare Training and Test Data\u003c/h3\u003e\n"
      },
      "dateCreated": "Jan 21, 2016 2:07:53 PM",
      "dateStarted": "Feb 4, 2016 5:39:32 PM",
      "dateFinished": "Feb 4, 2016 5:39:32 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\ncategories \u003d [\"alt.atheism\", \"soc.religion.christian\", \"comp.graphics\", \"sci.med\"]\n\nLabeledDocument \u003d Row(\"category\", \"text\")\n\ndef prepareDF(typ):\n    rdds \u003d [sc.wholeTextFiles(\"/user/zeppelin/20newsgroups/20news-bydate-\" + typ + \"/\" + category)\\\n              .map(lambda x: LabeledDocument(x[0].split(\"/\")[-2], x[1]))\\\n            for category in categories]\n    return sc.union(rdds).toDF()\n\n\ntwenty_train_df \u003d prepareDF(\"train\").cache()\ntwenty_test_df  \u003d prepareDF(\"test\") .cache()\n",
      "dateUpdated": "Feb 4, 2016 5:40:35 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453385302525_1819383711",
      "id": "20160121-140822_983857657",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Jan 21, 2016 2:08:22 PM",
      "dateStarted": "Feb 4, 2016 5:40:35 PM",
      "dateFinished": "Feb 4, 2016 5:40:49 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 4.2 Create Pipeline and Model",
      "dateUpdated": "Feb 4, 2016 5:40:40 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453476740018_1747998857",
      "id": "20160122-153220_1059542631",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e4.2 Create Pipeline and Model\u003c/h3\u003e\n"
      },
      "dateCreated": "Jan 22, 2016 3:32:20 PM",
      "dateStarted": "Feb 4, 2016 5:40:40 PM",
      "dateFinished": "Feb 4, 2016 5:40:40 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nfrom pyspark.ml.feature import HashingTF, IDF, Tokenizer, StringIndexer, StringIndexerModel\nfrom pyspark.ml.classification import NaiveBayes\nfrom pyspark.ml import Pipeline\n\nindexer   \u003d StringIndexer(inputCol\u003d\"category\", outputCol\u003d\"label\").fit(twenty_train_df)\ncategories \u003d indexer._call_java(\"labels\")   # BUG in 1.5.2, indexer.labels note exposed\n\ntokenizer \u003d Tokenizer(inputCol\u003d\"text\", outputCol\u003d\"words\")\nhashingTF \u003d HashingTF(inputCol\u003d\"words\", outputCol\u003d\"rawFeatures\")\nidf       \u003d IDF(inputCol\u003d\"rawFeatures\", outputCol\u003d\"features\")\nnb        \u003d NaiveBayes(featuresCol\u003d\"features\", labelCol\u003d\"label\", smoothing\u003d1.0, modelType\u003d\"multinomial\")\n\npipeline \u003d Pipeline(stages\u003d[indexer, tokenizer, hashingTF, idf, nb])\n\nmodel \u003d pipeline.fit(twenty_train_df)\n",
      "dateUpdated": "Feb 4, 2016 5:42:51 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453385630391_-933668169",
      "id": "20160121-141350_142628950",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Jan 21, 2016 2:13:50 PM",
      "dateStarted": "Feb 4, 2016 5:42:51 PM",
      "dateFinished": "Feb 4, 2016 5:43:42 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 4.3 Validation",
      "dateUpdated": "Feb 4, 2016 5:43:47 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453476775747_-767227297",
      "id": "20160122-153255_1630146197",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e4.3 Validation\u003c/h3\u003e\n"
      },
      "dateCreated": "Jan 22, 2016 3:32:55 PM",
      "dateStarted": "Feb 4, 2016 5:43:47 PM",
      "dateFinished": "Feb 4, 2016 5:43:47 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nfrom pyspark.mllib.evaluation import MulticlassMetrics\n\nprediction \u003d model.transform(twenty_test_df)\n\npredictionAndLabels \u003d prediction.select(\"label\", \"prediction\").rdd.cache()\nmetrics \u003d MulticlassMetrics(predictionAndLabels)\n\nprint \"\\nCONFUSION MATRIX\"\nprint metrics.confusionMatrix().toArray()\n\nprint \"\\nCATEGORY                 PRECISION  RECALL  F1\"\nfor i in range(len(categories)):\n    l \u003d categories[i]\n    p \u003d metrics.precision(float(i))\n    r \u003d metrics.recall(float(i))\n    f \u003d metrics.fMeasure(float(i))\n    print \"%22s:  %2.2f       %2.2f    %2.2f\" % (l, p, r, f)",
      "dateUpdated": "Feb 4, 2016 5:43:50 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453470474280_1155184598",
      "id": "20160122-134754_1952352033",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nCONFUSION MATRIX\n[[ 385.   16.    6.   29.]\n [   5.  350.    9.    4.]\n [   3.   15.  368.    1.]\n [   5.   15.    6.  285.]]\n\nCATEGORY                 PRECISION  RECALL  F1\nsoc.religion.christian:  0.97       0.88    0.92\n               sci.med:  0.88       0.95    0.92\n         comp.graphics:  0.95       0.95    0.95\n           alt.atheism:  0.89       0.92    0.90\n"
      },
      "dateCreated": "Jan 22, 2016 1:47:54 PM",
      "dateStarted": "Feb 4, 2016 5:43:50 PM",
      "dateFinished": "Feb 4, 2016 5:44:54 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1453477376611_-1108607732",
      "id": "20160122-154256_1899719489",
      "dateCreated": "Jan 22, 2016 3:42:56 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "20newsgroups",
  "id": "2B8GZHTDD",
  "angularObjects": {
    "2BCGDSGJS": [],
    "2BBTZJR6T": [],
    "2BC9YMRZX": [],
    "2BDMRZZ3T": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}